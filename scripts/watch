#!/usr/bin/env node

const cp = require('child_process');
const _ = require('lodash');
const path = require('path');
const config = require('../lib/config');

const chokidar = require('chokidar');
const watcher = chokidar.watch(config.srcPath + '/**/*.?(js|jsx|scss)');

let compile;

console.log('watching for changes!');

watcher.on('change', (filePath) => {

  console.log(`File ${filePath} changed`);

  compile && compile.kill();

  const parsedPath = path.parse(filePath);
  const ext = parsedPath.ext;
  const args = `--view index --${ext === 'scss' ? 'styles' : 'scripts'}`.split(' ');

  compile = cp.fork(path.resolve(__dirname, 'compile'), args);

  compile.stdout && compile.stdout.on('data', function (data) {

    console.log('compile stdout: ' + data.toString());
  });

  compile.stderr && compile.stderr.on('data', function (data) {

    console.log('compile stderr: ' + data.toString());
  });

  compile.on('exit', function (code) {

    console.log('compile exited with code ' + (code !== null && code.toString()));
  });

  console.log('watching for changes!');
});



